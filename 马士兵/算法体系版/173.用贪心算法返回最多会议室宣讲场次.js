/**
 * 一些项目要占用一个会议室宣讲，会议室不能同时容纳两个项目的宣讲，给你每一个项目开始的时间和结束的时间。你来安排宣讲的日程，要求会议室进行的宣讲的场次最多，返回最多的宣讲场次。
 
【贪心思路】选择会议结束时间最早的

假设有如下会议时间段：[1,5]，[1,2]，[2,8]，[3,6]，[3,11]
首先，所有会议根据结束时间排序：[1,2]，[1,5]，[3,6]，[2,8]，[3,11]
然后，[1,2]被选中，[1,5]被排除掉
再然后，[3,6]被选中，[2,8]，[3,11]被排除掉
最后，[1,2]、[3,6] 就是答案
*/

//这里不能允许有相同的数组值，不然就有问题
// 每个会议都有开始开始时间和结束时间
// 会议的开始时间和结束时间都是数值，都不会小于0
function bestArray(programs) {
  // 根据会议结束时间排序 
  programs.sort((a,b)=>a.end-b.end);
  let timeLine = 0;
  let result = 0;
  // 依次遍历每一个会议，结束时间早的会议先遍历 
  for (let i = 0; i < programs.length; i++) {
    if (timeLine <= programs[i].start) {
      result++;
      timeLine = programs[i].end;
    }
  }
  return result;
}
